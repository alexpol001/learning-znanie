<?php

namespace common\models;

/**
 * This is the model class for table "{{%question}}".
 *
 * @property int $id
 * @property int $course_id
 * @property int $module_id
 * @property string $title
 * @property mixed courseId0
 * @property mixed moduleId0
 */
class Question extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%question}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['course_id', 'module_id'], 'integer'],
            [['title'], 'string'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'course_id' => 'Course ID',
            'module_id' => 'Module ID',
            'title' => 'Вопрос',
        ];
    }

    public function getCourseId0()
    {
        return $this->hasOne(Course::className(), ['id' => 'course_id']);
    }

    public function getModuleId0()
    {
        return $this->hasOne(CourseModule::className(), ['id' => 'module_id']);
    }

    public function getAnswers()
    {
        return $this->hasMany(QuestionAnswer::className(), ['question_id' => 'id']);
    }

    /**
     * @param $studentCourse StudentCourse
     * @param null $module
     * @return array|null|\yii\db\ActiveRecord
     */
    public static function getQuestionByOutStudentCourseQuestion($studentCourse, $module = null)
    {
        $question = self::find();
        if ($module) {
            $pastQuestions = $studentCourse->getStudentCourseTestQuestions($module);
            $question->andWhere(['module_id' => $module['id']]);
        } else {
            $pastQuestions = $studentCourse->studentCourseExamineQuestions;
            $question->andWhere(['course_id' => $studentCourse->course_id]);
        }
        foreach ($pastQuestions as $pastQuestion) {
            $question->andWhere(['!=', 'id', $pastQuestion->question_id]);
        }
        return $question->one();
    }

    public function beforeDelete()
    {
        QuestionAnswer::deleteAll(['question_id' => $this->id]);
        StudentCourseQuestion::deleteAll(['question_id' => $this->id]);
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
