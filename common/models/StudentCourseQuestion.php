<?php

namespace common\models;

use frontend\components\Frontend;

/**
 * This is the model class for table "{{%student_course_question}}".
 *
 * @property int $id
 * @property int $student_course_id
 * @property int $question_id
 * @property int $module_id
 * @property int $status
 */
class StudentCourseQuestion extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%student_course_question}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['student_course_id', 'question_id'], 'required'],
            [['student_course_id', 'question_id', 'module_id', 'status'], 'integer'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'student_course_id' => 'Student Course ID',
            'question_id' => 'Question ID',
            'module_id' => 'Module ID',
            'status' => 'Status',
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        self::deleteAll(['student_course_id' => $this->student_course_id, 'question_id' => $this->question_id]);
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    private static function getWrong($studentCourse_id, $module = null) {
        $wrong = self::findAll(['status' => 0, 'student_course_id' => $studentCourse_id, 'module_id' => $module ? $module['id'] : 0]);
        $questions = Question::find();
        /** @var self $item */
        foreach ($wrong as $item) {
            $questions->orWhere(['id' => $item->question_id]);
        }
        return $questions->all();
    }

    public static function resetStudentCourse($studentCourse_id, $module = null)
    {
        $wrong = self::getWrong($studentCourse_id, $module);
        self::deleteAll(['student_course_id' => $studentCourse_id]);
        return $wrong;
    }

    public static function resetStudentCourseMiss($studentCourse_id, $module = null)
    {
        self::deleteAll(['student_course_id' => $studentCourse_id, 'status' => 2, 'module_id' => $module ? $module['id'] : 0]);
    }

    public static function setQuestion($post, $studentCourse, $module = null)
    {
        if ($post['question']) {
            $scq = new StudentCourseQuestion();
            $scq->student_course_id = $studentCourse->id;
            $scq->question_id = $post['question'];
            if ($module) {
                $scq->module_id = $module['id'];
            }
            if ($post['miss']) {
                $scq->status = 2;
            }
            if ($post['answer']) {
                if (Frontend::isRightQuestion($scq->question_id, $post['answers'])) {
                    $scq->status = 1;
                }
            }
            $scq->save();
        }
    }
}
