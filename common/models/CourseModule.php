<?php

namespace common\models;

use common\components\Common;
use Yii;

/**
 * This is the model class for table "{{%course_module}}".
 *
 * @property int $id
 * @property int $course_id
 * @property string $title
 * @property string $materials
 * @property int status
 * @property mixed questions
 * @property mixed courseId0
 */
class CourseModule extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%course_module}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['course_id', 'title'], 'required'],
            [['course_id', 'status'], 'integer'],
            [['materials'], 'string'],
            [['title'], 'string', 'max' => 256],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'course_id' => 'Course ID',
            'title' => 'Название модуля',
            'materials' => 'Видеоматериалы',
            'status' => 'Состояние'
        ];
    }

    public function isTest() {
        return count($this->questions);
    }

    public function getQuestions() {
        return $this->hasMany(Question::className(), ['module_id' => 'id']);
    }

    public function getCourseId0()
    {
        return $this->hasOne(Course::className(), ['id' => 'course_id']);
    }

    public static function getCourseModulesByCourseId($course_id) {
        $courseModules = self::find()
            ->where(['course_id' => $course_id])->all();
        return $courseModules ? $courseModules : [];
    }

    public function beforeDelete()
    {
        Common::deleteAll(Question::findAll(['module_id' => $this->id]));
        Common::deleteAll(StudentCourseModule::findAll(['module_id' => $this->id]));
        $path = Yii::getAlias('@course_module/').$this->id;
        Common::rmRec($path);
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
